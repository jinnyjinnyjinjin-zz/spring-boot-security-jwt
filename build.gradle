plugins {
	id 'org.springframework.boot' version '2.3.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

group = 'com.jinchae'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.hibernate.validator:hibernate-validator:6.1.5.Final'
	implementation 'io.springfox:springfox-swagger2:2.9.2'
	implementation 'io.springfox:springfox-swagger-ui:2.9.2'
	implementation 'com.google.code.gson:gson:2.8.6'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation('org.mockito:mockito-junit-jupiter:3.4.6')
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'com.auth0:java-jwt:3.10.3'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	runtime 'io.jsonwebtoken:jjwt-impl:0.11.2',
			'io.jsonwebtoken:jjwt-jackson:0.11.2'
}

test {
	useJUnitPlatform()
}

task packageDistribution(type: Zip) {
	archiveFileName = provider {
		"demo.zip"
	}
	from(rootProject.projectDir) {
		include('*/**')
		exclude('**/logger/**')
		exclude('**/logs/**')
		exclude('**/build/**')
		exclude('**/out/**')
		exclude('**/.gradle/**')
		exclude('**/local.properties')
		exclude('**/.idea/**')
		exclude('**/.DS_Store')
		exclude('**/*.iml')
	}
}
